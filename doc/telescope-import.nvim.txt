*telescope-import.nvim.txt*     For NVIM v0.8.0    Last change: 2025 August 15

==============================================================================
Table of Contents                    *telescope-import.nvim-table-of-contents*

1. import.nvim                             |telescope-import.nvim-import.nvim|
  - Features                      |telescope-import.nvim-import.nvim-features|
  - Supported languages|telescope-import.nvim-import.nvim-supported-languages|
  - Installation              |telescope-import.nvim-import.nvim-installation|
  - Configuration            |telescope-import.nvim-import.nvim-configuration|
  - Usage                            |telescope-import.nvim-import.nvim-usage|
  - About the author      |telescope-import.nvim-import.nvim-about-the-author|

==============================================================================
1. import.nvim                             *telescope-import.nvim-import.nvim*


  This plugin was renamed from `telescope-import.nvim` to `import.nvim` as it now
  supports multiple pickers. Old GitHub URLs will still redirect, but please
  update your plugin spec to use:
  >lua
      { "piersolenski/import.nvim" }
  <
  The previous setup method of registering the plugin as a Telescope extension is
  still supported, but the new method is recommended for access to latest
  features.
Import modules faster based on what you’ve already imported in your project.

Often we find ourselves importing the same modules over and over again in an
existing project. Rather than typing out import statements from scratch or
yanking them from other existing files, `import.nvim` searches your project for
existing import statements giving you a faster way to add them to the current
buffer.

For languages that support auto importing through their LSP, `import.nvim` may
still be of benefit when there are multiple symbols with the same name in the
project, or if you prefer authoring your files with the modules already
imported up top.


https://github.com/user-attachments/assets/b5c2d7bd-ced7-44d1-abd2-d96de37a05e8


FEATURES                          *telescope-import.nvim-import.nvim-features*

- **Multiple picker support**Works with Telescope, Snacks, or fzf-lua
- **Frequency-based sorting**Most used imports appear first for faster selection
- **Smart insertion**Automatically places imports in the correct location for frameworks like Vue and Svelte (inside `<script>` tags)
- **Multi-select**Select multiple imports using tab
- **Extensible**Add support for new languages or customize existing ones


SUPPORTED LANGUAGES    *telescope-import.nvim-import.nvim-supported-languages*

- Bash
- C/C++
- C#
- Dart
- Elixir
- F#
- Go
- Haskell
- Java
- JavaScript
- Julia
- Kotlin
- Lua
- MATLAB
- Nim
- OCaml
- PHP
- Python
- R
- Ruby
- Rust
- Scala
- Svelte
- Swift
- TypeScript
- Vue
- Zig
- Zsh


INSTALLATION                  *telescope-import.nvim-import.nvim-installation*

Install ripgrep <https://github.com/BurntSushi/ripgrep>.

>lua
    -- Lazy
    {
      'piersolenski/import.nvim',
      dependencies = {
        -- One of the following pickers is required:
        'nvim-telescope/telescope.nvim',
        -- 'folke/snacks.nvim',
        -- 'ibhagwan/fzf-lua',
      },
      opts = {
        picker = "telescope",
      },
      keys = {
        {
          "<leader>i",
          function()
            require("import").pick()
          end,
          desc = "Import",
        },
      },
    }
<


CONFIGURATION                *telescope-import.nvim-import.nvim-configuration*

`import.nvim` requires no configuration out of the box, but you can tweak it in
the following ways:

>lua
    {
      -- The picker to use
      picker = "telescope" | "snacks" | "fzf-lua",
      -- Imports can be added at a specified line whilst keeping the cursor in place
      insert_at_top = true,
      -- Optionally support additional languages or modify existing languages...
      custom_languages = {}
    }
<

Adding custom languages ~


CUSTOM LANGUAGES ~

The `custom_languages` configuration allows you to add support for new
languages or customize existing ones.


REQUIRED FIELDS BY USE CASE

**To add a new language:** All fields are required - **extensions**File
extensions that ripgrep will search (use `rg --type-list` to see supported
types) - **filetypes**Neovim filetypes where this configuration applies -
**regex**Regular expression pattern to match import statements in the language
- **insert_at_line** (optional): Line number where imports should be inserted
(defaults to 1)

**To customize an existing language:** Only specify the fields you want to
override - **filetypes**Must match the existing language’s filetypes exactly
- Other fields are only needed if you want to change them


EXAMPLES

**Add support for a new language:**

>lua
    custom_languages = {
      {
        extensions = { "elm" },
        filetypes = { "elm" },
        regex = [[^import\s+([\w.]+)(?:\s+as\s+\w+)?(?:\s+exposing\s+.+)?]],
      }
    }
<

**Override just the insertion behavior for Vue.js:**

>lua
    custom_languages = {
      {
        filetypes = { "vue" },
        insert_at_line = function() 
          -- Insert after opening <script> tag instead of before closing tag
          return vim.fn.search("<script", "n") + 1
        end,
      }
    }
<

**Override multiple aspects of an existing language:**

>lua
    custom_languages = {
      {
        filetypes = { "vue" },
        regex = [[^import\s+.*from\s+['\"](.+)['\"];?]], -- Custom regex
        insert_at_line = 2, -- Fixed line number
      }
    }
<

Custom languages are merged with built-in language support, with your configurations taking precedence over defaults.
USAGE                                *telescope-import.nvim-import.nvim-usage*

>
    :Import
<

>lua
    require("import").pick()
<


ABOUT THE AUTHOR          *telescope-import.nvim-import.nvim-about-the-author*

As well as Vim enthusiast, I am a Front-End Developer and Technical Lead from
London, UK.

Whether it’s to discuss a project, talk shop or just say hi, I’d love to
hear from you!

- Website <https://www.piersolenski.com/>
- CodePen <https://codepen.io/piers>
- LinkedIn <https://www.linkedin.com/in/piersolenski/>



Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
